<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dxc.bankia</groupId>
    <artifactId>traffic-spot</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <modules>
        <module>traffic-model</module>
        <module>traffic-services</module>
        <module>traffic-service-impl</module>
<!--
        <module>enrichment-rules-test</module>
        <module>postfilter-rules-test</module>
-->
        <module>kafka-producer</module>
        <module>spark-streaming-consumer</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <drools.version>7.18.0.Final</drools.version>
        <drools.test.version>7.18.0.Final-test</drools.test.version>
        <fuse.integration.version>1.3.0.redhat-016</fuse.integration.version>
        <cdi.version>1.0-SP4</cdi.version>
        <junit.version>4.11</junit.version>
        <mockito.version>2.0.5-beta</mockito.version>
        <hamcrest.version>1.3</hamcrest.version>
        <weld.version>1.1.28.Final</weld.version>
        <hsqldb.version>2.3.3</hsqldb.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.lang.version>2.6</commons.lang.version>
        <antlr.st.version>4.0.8</antlr.st.version>
        <logback.version>1.1.3</logback.version>
        <btm.version>2.1.4</btm.version>
        <h2.version>1.3.168</h2.version>
        <hibernate.version>4.2.17.Final</hibernate.version>
        <jpa.api.version>1.0.1.Final</jpa.api.version>
        <spring.version>5.2.7.RELEASE</spring.version>
        <camel.version>2.15.3</camel.version>
        <commons.logging.version>1.2</commons.logging.version>
        <org.jboss.arquillian.version>1.1.10.Final</org.jboss.arquillian.version>
        <org.wildfly.version>8.1.0.Final</org.wildfly.version>
        <kafka.version>0.11.0.1</kafka.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dxc.bankia</groupId>
                <artifactId>model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.dxc.bankia</groupId>
                <artifactId>traffic-services</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.dxc.bankia</groupId>
                <artifactId>traffic-service-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/flatten-maven-plugin -->
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-api</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-internal</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.server</groupId>
                <artifactId>kie-server-client</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.server</groupId>
                <artifactId>kie-server-api</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.server</groupId>
                <artifactId>kie-server-services-common</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.server</groupId>
                <artifactId>kie-server</artifactId>
                <type>war</type>
                <classifier>ee7</classifier>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-wb-distribution-wars</artifactId>
                <type>war</type>
                <classifier>wildfly8</classifier>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie.remote</groupId>
                <artifactId>kie-remote-client</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.integration.fuse</groupId>
                <artifactId>kie-camel</artifactId>
                <version>${fuse.integration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-ci</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-ci</artifactId>
                <classifier>tests</classifier>
                <version>${drools.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>14.0</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>kie-spring</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-compiler</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-decisiontables</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-guided-dtable</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-templates</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-pmml</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-core</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-core</artifactId>
                <classifier>tests</classifier>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-persistence-jpa</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>drools-infinispan-persistence</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>drools-infinispan-persistence</artifactId>
                <type>test-jar</type>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kie</groupId>
                <artifactId>jbpm-infinispan-persistence</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jbpm</groupId>
                <artifactId>jbpm-bpmn2</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jbpm</groupId>
                <artifactId>jbpm-persistence-jpa</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jbpm</groupId>
                <artifactId>jbpm-audit</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>${cdi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${weld.version}</version>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>ST4</artifactId>
                <version>${antlr.st.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons.logging.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test-spring</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${org.jboss.arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-arquillian-container-embedded</artifactId>
                <version>${org.wildfly.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly</groupId>
                <artifactId>wildfly-embedded</artifactId>
                <version>${org.wildfly.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.btm</groupId>
                <artifactId>btm</artifactId>
                <version>${btm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.0-api</artifactId>
                <version>${jpa.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-weld-se-embedded-1.1</artifactId>
                <version>1.0.0.CR9</version>
            </dependency>

            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-commons</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-guided-dtable</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-guided-template</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-datamodel-api</artifactId>
                <version>${drools.version}</version>
            </dependency>


            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-commons</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-guided-dtable</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-guided-template</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.drools</groupId>
                <artifactId>drools-workbench-models-datamodel-api</artifactId>
                <version>${drools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
    </dependencies>

</dependencyManagement>

    <!--repositories>
        <repository>
            <id>maven-public</id>
            <url>http://localhost:8081/repository/maven-public/</url>
            <layout>default</layout>
            <snapshots>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories-->

    <distributionManagement>
        <snapshotRepository>
            <id>local-maven</id>
            <url>nexus:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>local-maven</id>
            <url>nexus:8081/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <!--build>
        <plugins>
             <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                 <version>1.1.0</version>
                <configuration>
                    <flattenMode>bom</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build-->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
            </plugin>
        </plugins>
    </build>
</project>
